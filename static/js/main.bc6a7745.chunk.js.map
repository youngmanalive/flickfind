{"version":3,"sources":["img/camera.svg","config/keys.js","config/api_util.js","components/movie_index_item.js","components/movie_index.js","components/app.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","d","API_KEY","require","imgURLBuilder","filename","size","arguments","length","undefined","concat","Votes","_ref","vote_average","vote_count","react_default","a","createElement","Fragment","react_rating_default","readonly","stop","initialRating","MovieIndexItem","movie","className","src","poster_path","alt","title","release_date","slice","movie_index_item_Votes","overview","MoveIndex","_this$props","this","props","movies","activePage","totalResults","error","Pagination_default","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","handlePageChange","Math","ceil","map","key","id","components_movie_index_item","React","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","defaultState","handleInputChange","bind","assertThisInitialized","handleFetch","typingTimeout","query","e","_this2","currentTarget","value","clearTimeout","trim","setState","setTimeout","_this3","page","fetch","then","res","ok","json","fetchMovies","results","total_results","type","placeholder","components_movie_index","assign","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc6a7745.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camera.67526c83.svg\";","export const API_KEY = \"403ffcb3b4481da342203f94fb6e937e\";","const BASE_URL = \"https://api.themoviedb.org/3/search/movie?\";\nconst API_KEY = require('./keys').API_KEY;\n\nexport const fetchMovies = (query, page = 1) => (\n  fetch(`${BASE_URL}api_key=${API_KEY}&query=${query}&page=${page}`)\n    .then(res => {\n      if (!res.ok) return { error: true };\n      return res.json();\n    })\n);\n\nexport const imgURLBuilder = (filename, size = \"w185\") => {\n  if (!filename) return require(\"../img/camera.svg\");\n  return `https://image.tmdb.org/t/p/${size}${filename}`;\n};","import React from \"react\";\nimport { imgURLBuilder } from \"../config/api_util\";\nimport Rating from 'react-rating';\nimport \"../css/movie_index_item.css\";\n\nconst Votes = ({ vote_average, vote_count }) => !vote_count ? <span>No votes</span> :\n  <><Rating readonly stop={10} initialRating={vote_average} /> - <span>{vote_count} votes</span></>;\n\nconst MovieIndexItem = movie => (\n  <>\n    <div className=\"movie-poster\">\n      <img src={imgURLBuilder(movie.poster_path)} alt={movie.title} />\n    </div>\n    <div className=\"movie-details\">\n      <h1 className=\"movie-title\">{movie.title}</h1>\n      <h2 className=\"movie-year\">Released: {movie.release_date.slice(0, 4)}</h2>\n      <span className=\"movie-rating\"><Votes {...movie} /></span>\n      <p className=\"movie-overview\">{movie.overview}</p>\n    </div>\n  </>\n);\n\nexport default MovieIndexItem;","import React from 'react';\nimport '../css/movie_index.css';\nimport Pagination from \"react-js-pagination\";\nimport MovieIndexItem from \"./movie_index_item\";\n\nclass MoveIndex extends React.Component {\n  render() {\n    const { movies, activePage, totalResults, error } = this.props;\n    \n    if (error) return <h1 className=\"movie-index-msg\">Oops, something went wrong...</h1>;\n\n    if (totalResults === null) return (\n      <div>\n        <img className=\"film-icon\" src={require('../img/camera.svg')} alt=\"film icon\" />\n        <h1 className=\"welcome\">Find a Flick!</h1>\n      </div>\n    );\n\n    if (totalResults === 0) return <h1 className=\"movie-index-msg\">No movies found! :(</h1>;\n\n    return (\n      <>\n        <div className=\"movie-index-results\">\n          <h1>{totalResults} movie{totalResults === 1 ? '' : 's'} found!</h1>\n          <Pagination\n            activePage={activePage}\n            itemsCountPerPage={20}\n            totalItemsCount={totalResults}\n            pageRangeDisplayed={10}\n            onChange={this.props.handlePageChange}\n          />\n          <h1>page {activePage} of {Math.ceil(totalResults / 20)}</h1>\n        </div>\n        <ul className=\"movie-list\">\n          {movies.map(movie => (\n            <li key={movie.id} className=\"movie-index-item\">\n              <MovieIndexItem {...movie} />\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default MoveIndex;","import React from \"react\";\nimport MovieIndex from \"./movie_index\";\nimport { fetchMovies } from \"../config/api_util\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.defaultState();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleFetch = this.handleFetch.bind(this);\n    this.typingTimeout = null;\n  }\n\n  defaultState() {\n    return({\n      query: \"\",\n      movies: [],\n      activePage: 1,\n      totalResults: null,\n      error: false\n    })\n  }\n\n  handleInputChange(e) {\n    const query = e.currentTarget.value;\n\n    // use a short timeout so we're not firing repeated requests.\n    if (this.typingTimeout) clearTimeout(this.typingTimeout);\n\n    // check for empty query\n    if (!query.trim().length) {\n      this.setState(this.defaultState());\n    } else {\n      this.setState({ query, error: false }, () => {\n        this.typingTimeout = setTimeout(this.handleFetch, 150);\n      });\n    }\n  }\n\n  handleFetch(page = 1) {\n    // make sure query has not been cleared during timeout\n    if (!this.state.query.length) return;\n\n    fetchMovies(this.state.query, page).then(res => {\n      if (res.error) {\n        this.setState({ error: true });\n      } else {\n        this.setState({\n          activePage: page,\n          movies: res.results,\n          totalResults: res.total_results <= 20000 ? res.total_results : 20000\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"header-container\">\n          <div className=\"title\">\n            <h1>FlickFind</h1>\n            <h2>Search for movies!</h2>\n          </div>\n          <div className=\"search\">\n            <input\n              type=\"text\"\n              className=\"search-bar\"\n              onChange={this.handleInputChange}\n              value={this.state.query}\n              placeholder=\"Enter a movie title...\"\n            />\n          </div>\n        </div>\n        <div className=\"movie-index\">\n          <MovieIndex {...this.state} handlePageChange={this.handleFetch} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/reset.css';\nimport './css/index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}